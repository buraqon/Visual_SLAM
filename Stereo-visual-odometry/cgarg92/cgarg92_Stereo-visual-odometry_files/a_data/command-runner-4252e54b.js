!function(){"use strict";class Switchboard{constructor(e,t=window){this.replyListeners={},this.routes={},this.receiver=e,this.sender=t,this.sender.onmessage=this.receive.bind(this)}addListener(e,t){this.routes[e]=t}respond(e,t){this.postMessage({id:e,type:"response",payload:t})}isReceiverWebWorker(){return this.receiver instanceof Worker}postMessage(e){"undefined"==typeof Window?self.postMessage(e):this.isReceiverWebWorker()?this.receiver.postMessage(e):this.receiver.postMessage(e,"*")}async listenForReply(e){let t=()=>{};const s=new Promise((e=>{t=e}));return this.replyListeners[e]=t,s}generateId(e){return`${e}-${(new Date).getTime().toString()}-${Math.random().toString()}`}async post(e,t){const s=this.generateId(e);return this.postMessage({id:s,type:e,payload:t}),this.listenForReply(s)}async receive(e){const{id:t,type:s}=e.data;"response"===s?this.replyListeners[t](e.data):this.routes[s]&&this.routes[s](e.data)}forward(e,...t){for(const s of t)this.addListener(s,(async t=>{const r=await e.post(s,t.payload);this.respond(t.id,r.payload)}))}}class CommandRunner{run(e,t){const s=new Worker(e.command.id,{credentials:"omit"}),r=new Switchboard(s,s);s.onerror=()=>{t.flash("error",`${e.command.name}: something went wrong!`)};const n=setTimeout((()=>{s.terminate(),t.flash("error",`${e.command.name}: timed out!`)}),CommandRunner.timeout);r.addListener("ready",(async t=>{r.respond(t.id,e)})),r.addListener("done",(()=>{clearTimeout(n)})),r.forward(t,"graphql","flash","confirm","navigate","copyToClipboard")}}CommandRunner.timeout=1e4;class RunnerToPaletteSwitchboard extends Switchboard{static setup(e){const t=new RunnerToPaletteSwitchboard(e),s=new CommandRunner;t.addListener("runCommand",(async e=>{const r=e.payload;s.run(r,t)}))}async graphql(e,t){return this.post("graphql",{query:e,variables:t})}async flash(e,t){return this.post("flash",{type:e,message:t})}}RunnerToPaletteSwitchboard.setup(window.parent)}();
//# sourceMappingURL=command-runner-c2da16f7.js.map
